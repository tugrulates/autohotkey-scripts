name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: denoland/setup-deno@v2

      - name: Test
        run: deno task lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: denoland/setup-deno@v2

      - name: Test
        run: deno task test --coverage

      - name: Coverage
        run: deno coverage --lcov --output=cov.lcov

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    strategy:
      matrix:
        target: [
          'x86_64-pc-windows-msvc',
          'x86_64-apple-darwin',
          'aarch64-apple-darwin',
          'x86_64-unknown-linux-gnu',
          'aarch64-unknown-linux-gnu'
        ]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: denoland/setup-deno@v2

      - name: Build
        run: COMPILE_ARGS="${{ matrix.target }}" deno task build

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: matrix.target
          path: dist/

  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: denoland/setup-deno@v2

      - name: Publish (dry run)
        run: deno publish --dry-run
